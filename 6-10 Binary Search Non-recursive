#include <stdio.h>
#include <stdlib.h>

#define MAXSIZE 10
#define NotFound 0
typedef int ElementType;

typedef int Position;
typedef struct LNode *List;
struct LNode {
    ElementType Data[MAXSIZE];
    Position Last; /* 保存线性表中最后一个元素的位置 */
};

List ReadInput(); /* 裁判实现，细节不表。元素从下标1开始存储 */
Position BinarySearch( List L, ElementType X );
void printList(List l);


int main()
{
    List L;
    ElementType X;
    Position P;

    L = ReadInput();
    printList(L);
    scanf("%d", &X);
    P = BinarySearch( L, X );
    printf("%d\n", P);

    return 0;
}

List ReadInput() {/* 裁判实现，细节不表。元素从下标1开始存储 */
	List l = (List)malloc(sizeof(struct LNode));
	int num;
	scanf("%d", &num);
	
	for(int i = 0; i < num; i++){
		scanf("%d", &(l->Data[i + 1]));
	}
	l->Last = num;
	
	return l;
}

Position BinarySearch( List L, ElementType X ) {
	Position left = 1, right = L->Last, mid, pos = NotFound;
	
	while(left <= right){
		mid = (left + right) / 2;
		if(L->Data[mid] == X) {
			pos = mid;
			break;
		}
		else if (L->Data[mid] > X) right = mid - 1;
		else left = mid + 1;	
	}
	
	return pos;
}

void printList(List l) {
	int first = 1;
	for(Position pos = 1; pos <= l->Last; pos++) {
		if(first) first = !first;
		else printf(" ");
		printf("%d", l->Data[pos]);	
	}
	printf("\n");
}
